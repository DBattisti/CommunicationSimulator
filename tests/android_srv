#!/usr/bin/env python

import os, socket, select, time

bank = open("android_srv_data").readlines()
pos = 0

srv_sk = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
srv_sk.bind(("0.0.0.0", 9005))
srv_sk.listen(2)

clients = [] # [sk, buf]

def accept_client():
	sk, addr = srv_sk.accept()
	clients.append([sk, ""])

def get_client(sk):
	for x in range(0, len(clients)):
		if clients[x][0] is sk:
			return x
	return -1

def close_client(sk):
	global pos
	x = get_client(sk)
	sk.close()
	if x > -1:
		del clients[x]
		if not clients:
			pos = 0

def read_client(sk):
	data = sk.recv(4096)
	if not data:
		close_client(sk)

def write_client(sk):
	x = get_client(sk)
	if x > -1:
		sent = clients[x][0].send(clients[x][1])
		if sent <= 0:
			close_client(sk)
		else:
			clients[x][1] = clients[x][1][sent:]
	

def send_clients(msg):
	for client in clients:
		client[1] += msg
	

next_tx = time.time() + 1

while True:
	rd = [ client[0] for client in clients ]
	rd.append(srv_sk)
	wr = [ client[0] for client in clients if client[1] ]

	to  = next_tx - time.time()

	rd, wr, ex = select.select(rd, wr, [], to)

	for sk in rd:
		if sk is srv_sk:
			accept_client()
		else:
			read_client(sk)

	for sk in wr:
		write_client(sk)

	if time.time() > next_tx:
		next_tx = time.time() + 1
		if clients:
			send_clients(bank[pos % len(bank)])
			pos += 1
		else:
			pos = 0
